{
  "openapi": "3.0.0",
  "info": {
    "title": "DSO Microservices API",
    "description": "Microservices for gathering and analysing the data from DSOs",
    "contact": {
      "email": "info@ai-nergy.net"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://dso-microservices.azurewebsites.net/api",
      "description": "dso-microservices PROD"
    },
    {
      "url": "https://dso-microservices-stage.azurewebsites.net/api",
      "description": "dso-microservices STAGE"
    },
    {
      "url": "http://localhost:7071/api",
      "description": "localhost DEV"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "tags": [
    {
      "name": "MetaData",
      "description": "Endpoints for managing metadata"
    },
    {
      "name": "Data Delivery",
      "description": "Endpoints for delivering data"
    },
    {
      "name": "Results",
      "description": "Endpoints for getting the results"
    }
  ],
  "paths": {
    "/substation/activate": {
      "post": {
        "tags": [
          "MetaData"
        ],
        "summary": "activates a substation",
        "description": "Activates the substation and starts the billing\n",
        "operationId": "substationActivate",
        "requestBody": {
          "description": "Substation which to activate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/substation_activate_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Substation successfully activated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data or error in the API",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/substation/deactivate": {
      "post": {
        "tags": [
          "MetaData"
        ],
        "summary": "deactivates a substation",
        "description": "Deactivates the substation and ends the billing\n",
        "operationId": "substationDeactivate",
        "requestBody": {
          "description": "Substation which to deactivate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/substation_deactivate_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Substation successfully deactivated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data or error in the API",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/substation/update": {
      "post": {
        "tags": [
          "MetaData"
        ],
        "summary": "updates metadata for a station",
        "description": "Updates metadata for a station, should be called only when metadata changes. Data can be changed only for an activated substation\n",
        "operationId": "substationUpdate",
        "requestBody": {
          "description": "New substation metadata",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/substation_update_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Metadata updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data or error in the API",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/substation/data": {
      "post": {
        "tags": [
          "Data Delivery"
        ],
        "summary": "Deliver data for a substation",
        "description": "Deliver data for a substation, accepts data for more than one substation at once.\n",
        "operationId": "substationData",
        "requestBody": {
          "description": "Substation data to deliver",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/substation_data_body"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data or error in the API",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/forecast/temperature": {
      "get": {
        "tags": [
          "Results"
        ],
        "summary": "Get temperature forecast for a given substation",
        "description": "Gets temperature forecast....",
        "operationId": "forecastTemperature",
        "parameters": [
          {
            "name": "substation_id",
            "in": "query",
            "description": "the id of the substation for which to get the data",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quantiles",
            "in": "query",
            "description": "Array of quantiles for which to return the values, items can be any numbers in range 0-1. Optional, default: [0.1, 0.5, 0.9]",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "[\"0.1\", \"0.5\", \"0.9\"]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gives the temperature forecats for given substation_id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultForecastTemperature"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data or error in the API",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/analysis/phaseimbalance": {
      "get": {
        "tags": [
          "Results"
        ],
        "summary": "Calculates phase imbalance",
        "description": "Calculates phase imbalance",
        "operationId": "analysisPhaseImbalance",
        "parameters": [
          {
            "name": "substation_id",
            "in": "query",
            "description": "the id of the substation for which to get the results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gives the phase imbalnace analysis for given substation_id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultAnalysisPhaseImbalance"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data or error in the API",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/analysis/voltagedeviation": {
      "get": {
        "tags": [
          "Results"
        ],
        "summary": "calculate the voltage deviation",
        "description": "Calculates the voltage deviation from the delivered data for the specified subsation",
        "operationId": "analysisVoltageDeviation",
        "parameters": [
          {
            "name": "substation_id",
            "in": "query",
            "description": "the id of the substation for which to get the data",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gives the voltage deviation analysis for given substation_id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultAnalysisVoltageDeviation"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data or error in the API",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "required": [
          "code",
          "data"
        ],
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "data": {
            "type": "object",
            "example": {
              "substation_id": "missing field"
            }
          }
        },
        "description": "The error response used by all endpoints"
      },
      "SaveSuccessResponse": {
        "required": [
          "data",
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Data was succesfully saved"
          },
          "data": {
            "$ref": "#/components/schemas/SaveSuccessResponse_data"
          }
        }
      },
      "ResultForecastTemperature": {
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResultWarningForecastTemperature"
            }
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResultForecastTemperature_result"
            }
          }
        }
      },
      "ResultAnalysisPhaseImbalance": {
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResultWarningAnalysisPhaseImbalance"
            }
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResultAnalysisPhaseImbalance_result"
            }
          }
        }
      },
      "ResultAnalysisVoltageDeviation": {
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResultWarningAnalysisVoltageDeviation"
            }
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResultAnalysisVoltageDeviation_result"
            }
          }
        }
      },
      "SubstationMetadata": {
        "required": [
          "id",
          "substation",
          "transformer"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "metadata": {
            "$ref": "#/components/schemas/SubstationMetadata_metadata"
          }
        }
      },
      "TransformerMetadata": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/TransformerMetadata_metadata"
          }
        }
      },
      "TransformerData": {
        "required": [
          "electrical",
          "thermal"
        ],
        "type": "object",
        "properties": {
          "electrical": {
            "$ref": "#/components/schemas/TransformerData_electrical"
          },
          "thermal": {
            "$ref": "#/components/schemas/TransformerData_thermal"
          }
        }
      },
      "ElectricalLinePhaseData": {
        "required": [
          "current",
          "energy",
          "power",
          "voltage"
        ],
        "type": "object",
        "properties": {
          "current": {
            "$ref": "#/components/schemas/ElectricalWave"
          },
          "voltage": {
            "$ref": "#/components/schemas/ElectricalWave"
          },
          "power": {
            "$ref": "#/components/schemas/ElectricalLinePhaseData_power"
          },
          "energy": {
            "$ref": "#/components/schemas/ElectricalLinePhaseData_energy"
          }
        }
      },
      "ElectricalLineNeutralData": {
        "required": [
          "current"
        ],
        "type": "object",
        "properties": {
          "current": {
            "$ref": "#/components/schemas/ElectricalWave"
          }
        }
      },
      "ElectricalWave": {
        "required": [
          "rms"
        ],
        "type": "object",
        "properties": {
          "rms": {
            "type": "number"
          },
          "waveform_peak": {
            "type": "number"
          },
          "crest_factor": {
            "type": "number"
          },
          "thd": {
            "$ref": "#/components/schemas/ElectricalWave_thd"
          },
          "spectrum": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ElectricalWave_spectrum"
            }
          }
        }
      },
      "Location": {
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "elevation": {
            "type": "number"
          }
        }
      },
      "ResultWarningForecastTemperature": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/WarningCodeForecastTemperature"
          },
          "message": {
            "type": "string",
            "example": "We have enough input data to do the calculation but no enough for high accuracy"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "ResultWarningAnalysisPhaseImbalance": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/WarningCodeAnalysisPhaseImbalance"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "ResultWarningAnalysisVoltageDeviation": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/WarningCodeAnalysisVoltageDeviation"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "ErrorCode": {
        "type": "string",
        "description": "- ERROR_CODE_INVALID_INPUT_DATA - Some of the input data was invalid, see data for details\n\n- ERROR_CODE_APPLICATION_ERROR - There was an error in the application, shuold be reported\n",
        "example": "ERROR_INVALID_INPUT_DATA",
        "enum": [
          "ERROR_INVALID_INPUT_DATA",
          "ERROR_APPLICATION_ERROR"
        ]
      },
      "WarningCodeForecastTemperature": {
        "type": "string",
        "example": "WARNING_ACCURACCY_LOW_INPUT",
        "enum": [
          "WARNING_ACCURACCY_LOW_INPUT",
          "WARNING_ACCURACCY_LOW_WEATHER",
          "WARNING_BAD_MODEL_FIT"
        ]
      },
      "WarningCodeAnalysisPhaseImbalance": {
        "type": "string",
        "example": "WARNING_VOLTAGE_UNBALANCE_EN50160_2010",
        "enum": [
          "WARNING_VOLTAGE_UNBALANCE_EN50160_2010",
          "WARNING_CURRENT_UNBALANCE"
        ]
      },
      "WarningCodeAnalysisVoltageDeviation": {
        "type": "string",
        "example": "WARNING_VOLTAGE_DEVIATION",
        "enum": [
          "WARNING_VOLTAGE_DEVIATION"
        ]
      },
      "substationactivate_substation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          }
        }
      },
      "substation_activate_body": {
        "type": "object",
        "properties": {
          "substation": {
            "$ref": "#/components/schemas/substationactivate_substation"
          }
        }
      },
      "substationdeactivate_substation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "substation_deactivate_body": {
        "type": "object",
        "properties": {
          "substation": {
            "$ref": "#/components/schemas/substationdeactivate_substation"
          }
        }
      },
      "substation_update_body": {
        "type": "object",
        "properties": {
          "substation": {
            "$ref": "#/components/schemas/SubstationMetadata"
          },
          "transformer": {
            "$ref": "#/components/schemas/TransformerMetadata"
          }
        }
      },
      "substationdata_substation": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "substation_data_body": {
        "required": [
          "substation",
          "timestamp",
          "transformer"
        ],
        "type": "object",
        "properties": {
          "substation": {
            "$ref": "#/components/schemas/substationdata_substation"
          },
          "transformer": {
            "$ref": "#/components/schemas/TransformerData"
          },
          "timestamp": {
            "type": "integer"
          }
        }
      },
      "SaveSuccessResponse_data": {
        "required": [
          "substation_id"
        ],
        "type": "object",
        "properties": {
          "substation_id": {
            "type": "string"
          }
        },
        "nullable": true
      },
      "ResultForecastTemperature_data_contributors": {
        "type": "object",
        "properties": {
          "contributor": {
            "type": "string"
          },
          "percentage": {
            "type": "number"
          }
        }
      },
      "ResultForecastTemperature_data": {
        "type": "object",
        "properties": {
          "expected": {
            "type": "number"
          },
          "lower": {
            "type": "number"
          },
          "upper": {
            "type": "number"
          },
          "quantiles": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            },
            "description": "a key-value pair where keys are quantiles specified in the input parameter \"quantiles\"",
            "example": {
              "0.05": 23.4422666666667,
              "0.5": 24.3985833333333,
              "0.95": 22.5100666666667
            }
          },
          "contributors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResultForecastTemperature_data_contributors"
            }
          }
        },
        "description": "values in \"expected\", \"lower\" and \"upper\" fields are generated from fixed quantiles"
      },
      "ResultForecastTemperature_result": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "ISO Date, UTC"
          },
          "data": {
            "$ref": "#/components/schemas/ResultForecastTemperature_data"
          }
        }
      },
      "ResultAnalysisPhaseImbalance_data": {
        "type": "object",
        "properties": {
          "current_unbalance_factor": {
            "type": "number"
          },
          "voltage_unbalace_factor": {
            "type": "number"
          }
        }
      },
      "ResultAnalysisPhaseImbalance_result": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "ISO Date, UTC"
          },
          "data": {
            "$ref": "#/components/schemas/ResultAnalysisPhaseImbalance_data"
          }
        }
      },
      "ResultAnalysisVoltageDeviation_data": {
        "type": "object",
        "properties": {
          "voltage_deviation_line_1": {
            "type": "number"
          },
          "voltage_deviation_line_2": {
            "type": "number"
          },
          "voltage_deviation_line_3": {
            "type": "number"
          }
        }
      },
      "ResultAnalysisVoltageDeviation_result": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "ISO date, UTC"
          },
          "data": {
            "$ref": "#/components/schemas/ResultAnalysisVoltageDeviation_data"
          }
        }
      },
      "SubstationMetadata_metadata": {
        "required": [
          "location"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "model": {
            "type": "object"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "transformer": {
            "type": "object"
          }
        }
      },
      "TransformerMetadata_metadata": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "model": {
            "type": "object"
          },
          "nameplate": {
            "type": "object"
          }
        }
      },
      "TransformerData_electrical_secondary_frequency": {
        "type": "object",
        "properties": {
          "instantaneous": {
            "type": "number"
          }
        }
      },
      "TransformerData_electrical_secondary": {
        "required": [
          "line_1",
          "line_2",
          "line_3",
          "neutral"
        ],
        "type": "object",
        "properties": {
          "line_1": {
            "$ref": "#/components/schemas/ElectricalLinePhaseData"
          },
          "line_2": {
            "$ref": "#/components/schemas/ElectricalLinePhaseData"
          },
          "line_3": {
            "$ref": "#/components/schemas/ElectricalLinePhaseData"
          },
          "neutral": {
            "$ref": "#/components/schemas/ElectricalLineNeutralData"
          },
          "frequency": {
            "$ref": "#/components/schemas/TransformerData_electrical_secondary_frequency"
          }
        }
      },
      "TransformerData_electrical": {
        "required": [
          "secondary"
        ],
        "type": "object",
        "properties": {
          "secondary": {
            "$ref": "#/components/schemas/TransformerData_electrical_secondary"
          }
        }
      },
      "TransformerData_thermal_top_oil": {
        "required": [
          "temperature"
        ],
        "type": "object",
        "properties": {
          "temperature": {
            "type": "number"
          }
        }
      },
      "TransformerData_thermal_radiator": {
        "type": "object",
        "properties": {
          "temperature": {
            "type": "number"
          }
        }
      },
      "TransformerData_thermal": {
        "required": [
          "top_oil"
        ],
        "type": "object",
        "properties": {
          "top_oil": {
            "$ref": "#/components/schemas/TransformerData_thermal_top_oil"
          },
          "radiator": {
            "$ref": "#/components/schemas/TransformerData_thermal_radiator"
          }
        }
      },
      "ElectricalLinePhaseData_power_power_factor": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number"
          }
        }
      },
      "ElectricalLinePhaseData_power": {
        "type": "object",
        "properties": {
          "active": {
            "type": "number"
          },
          "reactive": {
            "type": "number"
          },
          "apparent": {
            "type": "number"
          },
          "power_factor": {
            "$ref": "#/components/schemas/ElectricalLinePhaseData_power_power_factor"
          }
        }
      },
      "ElectricalLinePhaseData_energy_active": {
        "type": "object",
        "properties": {
          "imported": {
            "type": "number"
          },
          "exported": {
            "type": "number"
          }
        }
      },
      "ElectricalLinePhaseData_energy": {
        "type": "object",
        "properties": {
          "active": {
            "$ref": "#/components/schemas/ElectricalLinePhaseData_energy_active"
          },
          "reactive": {
            "$ref": "#/components/schemas/ElectricalLinePhaseData_energy_active"
          },
          "apparent": {
            "$ref": "#/components/schemas/ElectricalLinePhaseData_energy_active"
          }
        }
      },
      "ElectricalWave_thd": {
        "type": "object",
        "properties": {
          "rms": {
            "type": "number"
          },
          "fundamental": {
            "type": "number"
          }
        }
      },
      "ElectricalWave_spectrum": {
        "type": "object",
        "properties": {
          "centroid": {
            "type": "number"
          },
          "range": {
            "type": "number"
          },
          "magnitude": {
            "type": "number"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "x-functions-key",
        "in": "header"
      }
    }
  }
}